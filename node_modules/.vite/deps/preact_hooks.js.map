{
  "version": 3,
  "sources": ["../../preact/hooks/src/index.js"],
  "sourcesContent": ["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst nextValue = hookState._reducer(hookState._value[0], action);\n\t\t\t\tif (hookState._value[0] !== nextValue) {\n\t\t\t\t\thookState._value = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\t}\n\n\treturn hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = err => {\n\t\t\tif (state._value) state._value(err);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],
  "mappings": "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",
  "names": []
}
